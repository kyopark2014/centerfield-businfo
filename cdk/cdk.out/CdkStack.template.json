{
  "Resources": {
    "snscenterfield46086FE3": {
      "Type": "AWS::SNS::Topic",
      "Properties": {
        "TopicName": "sns-centerfield"
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/sns-centerfield/Resource"
      }
    },
    "CenterfieldBusInfoA6A9C081": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "RouteNumber",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "Timestamp",
            "KeyType": "RANGE"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "RouteNumber",
            "AttributeType": "S"
          },
          {
            "AttributeName": "Timestamp",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "TableName": "Centerfield-BusInfo"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "CdkStack/Centerfield-BusInfo/Resource"
      }
    },
    "lambdaGetLocationServiceRole8E9E8F54": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/lambdaGetLocation/ServiceRole/Resource"
      }
    },
    "lambdaGetLocationServiceRoleDefaultPolicyBB7F0B7F": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CenterfieldBusInfoA6A9C081",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "snscenterfield46086FE3"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "lambdaGetLocationServiceRoleDefaultPolicyBB7F0B7F",
        "Roles": [
          {
            "Ref": "lambdaGetLocationServiceRole8E9E8F54"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/lambdaGetLocation/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "lambdaGetLocation8AEF967B": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "220cd18184c9e38ddaabbd8ca97a858b29d2f6cbabde6c5bdd24f3905ce7149b.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "lambdaGetLocationServiceRole8E9E8F54",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "topicArn": {
              "Ref": "snscenterfield46086FE3"
            },
            "tableName": "Centerfield-BusInfo"
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 10
      },
      "DependsOn": [
        "lambdaGetLocationServiceRoleDefaultPolicyBB7F0B7F",
        "lambdaGetLocationServiceRole8E9E8F54"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkStack/lambdaGetLocation/Resource",
        "aws:asset:path": "asset.220cd18184c9e38ddaabbd8ca97a858b29d2f6cbabde6c5bdd24f3905ce7149b",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "lambdaGetLocationInvokeServicePrincipalapigatewayamazonawscomA976FE75": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "lambdaGetLocation8AEF967B",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/lambdaGetLocation/InvokeServicePrincipal(apigateway.amazonaws.com)"
      }
    },
    "LambdaSlackServiceRole519A82E6": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/LambdaSlack/ServiceRole/Resource"
      }
    },
    "LambdaSlackA1FFF73E": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
          },
          "S3Key": "993553a8b9f4728a8eb5cad9dc2a3cbad0704d75120829d3b62dc60d6089fdc3.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "LambdaSlackServiceRole519A82E6",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "token": "xoxb-manually-updated"
          }
        },
        "Handler": "index.handler",
        "Runtime": "nodejs14.x",
        "Timeout": 10
      },
      "DependsOn": [
        "LambdaSlackServiceRole519A82E6"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkStack/LambdaSlack/Resource",
        "aws:asset:path": "asset.993553a8b9f4728a8eb5cad9dc2a3cbad0704d75120829d3b62dc60d6089fdc3",
        "aws:asset:is-bundled": false,
        "aws:asset:property": "Code"
      }
    },
    "LambdaSlackAllowInvokeCdkStacksnscenterfield17D362D48729122A": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "LambdaSlackA1FFF73E",
            "Arn"
          ]
        },
        "Principal": "sns.amazonaws.com",
        "SourceArn": {
          "Ref": "snscenterfield46086FE3"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/LambdaSlack/AllowInvoke:CdkStacksnscenterfield17D362D4"
      }
    },
    "LambdaSlacksnscenterfield45100307": {
      "Type": "AWS::SNS::Subscription",
      "Properties": {
        "Protocol": "lambda",
        "TopicArn": {
          "Ref": "snscenterfield46086FE3"
        },
        "Endpoint": {
          "Fn::GetAtt": [
            "LambdaSlackA1FFF73E",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/LambdaSlack/sns-centerfield/Resource"
      }
    },
    "AccessLogs8B620ECA": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 90
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "CdkStack/AccessLogs/Resource"
      }
    },
    "AccessLogsPolicyResourcePolicyA1E3EF94": {
      "Type": "AWS::Logs::ResourcePolicy",
      "Properties": {
        "PolicyDocument": {
          "Fn::Join": [
            "",
            [
              "{\"Statement\":[{\"Action\":[\"logs:CreateLogStream\",\"logs:PutLogEvents\"],\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"apigateway.amazonaws.com\"},\"Resource\":\"",
              {
                "Fn::GetAtt": [
                  "AccessLogs8B620ECA",
                  "Arn"
                ]
              },
              "\"}],\"Version\":\"2012-10-17\"}"
            ]
          ]
        },
        "PolicyName": "CdkStackAccessLogsPolicy43F890AB"
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/AccessLogs/Policy/ResourcePolicy"
      }
    },
    "apicenterfield7E54AC42": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "BinaryMediaTypes": [
          "*/*"
        ],
        "Description": "api-centerfield",
        "EndpointConfiguration": {
          "Types": [
            "REGIONAL"
          ]
        },
        "Name": "api-centerfield"
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/api-centerfield/Resource"
      }
    },
    "apicenterfieldCloudWatchRoleEE23F233": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/api-centerfield/CloudWatchRole/Resource"
      }
    },
    "apicenterfieldAccount87569DF3": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "apicenterfieldCloudWatchRoleEE23F233",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "apicenterfield7E54AC42"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkStack/api-centerfield/Account"
      }
    },
    "apicenterfieldDeploymentA2F5A2DE8276dc55ebf2e1d80472fdfd8ab84334": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "apicenterfield7E54AC42"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "apicenterfieldgetLocationGET7DD9B9AD",
        "apicenterfieldgetLocation01CFDE67"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkStack/api-centerfield/Deployment/Resource"
      }
    },
    "apicenterfieldDeploymentStagedev4557BC74": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "apicenterfield7E54AC42"
        },
        "AccessLogSetting": {
          "DestinationArn": {
            "Fn::GetAtt": [
              "AccessLogs8B620ECA",
              "Arn"
            ]
          },
          "Format": "{\"requestId\":\"$context.requestId\",\"ip\":\"$context.identity.sourceIp\",\"user\":\"$context.identity.user\",\"requestTime\":\"$context.requestTime\",\"httpMethod\":\"$context.httpMethod\",\"resourcePath\":\"$context.resourcePath\",\"status\":\"$context.status\",\"protocol\":\"$context.protocol\",\"responseLength\":\"$context.responseLength\"}"
        },
        "DeploymentId": {
          "Ref": "apicenterfieldDeploymentA2F5A2DE8276dc55ebf2e1d80472fdfd8ab84334"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "apicenterfieldAccount87569DF3"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkStack/api-centerfield/DeploymentStage.dev/Resource"
      }
    },
    "apicenterfieldgetLocation01CFDE67": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apicenterfield7E54AC42",
            "RootResourceId"
          ]
        },
        "PathPart": "getLocation",
        "RestApiId": {
          "Ref": "apicenterfield7E54AC42"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/api-centerfield/Default/getLocation/Resource"
      }
    },
    "apicenterfieldgetLocationGETApiPermissionCdkStackapicenterfield2F5A689EGETgetLocationB895B1A3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "lambdaGetLocation8AEF967B",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "apicenterfield7E54AC42"
              },
              "/",
              {
                "Ref": "apicenterfieldDeploymentStagedev4557BC74"
              },
              "/GET/getLocation"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/api-centerfield/Default/getLocation/GET/ApiPermission.CdkStackapicenterfield2F5A689E.GET..getLocation"
      }
    },
    "apicenterfieldgetLocationGETApiPermissionTestCdkStackapicenterfield2F5A689EGETgetLocation5A8DFF24": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "lambdaGetLocation8AEF967B",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "apicenterfield7E54AC42"
              },
              "/test-invoke-stage/GET/getLocation"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/api-centerfield/Default/getLocation/GET/ApiPermission.Test.CdkStackapicenterfield2F5A689E.GET..getLocation"
      }
    },
    "apicenterfieldgetLocationGET7DD9B9AD": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "apicenterfieldgetLocation01CFDE67"
        },
        "RestApiId": {
          "Ref": "apicenterfield7E54AC42"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "Credentials": {
            "Fn::GetAtt": [
              "LambdaInvokeRole0342EAD8",
              "Arn"
            ]
          },
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            }
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestTemplates": {
            "application/json": "##  See http://docs.aws.amazon.com/apigateway/latest/developerguide/api-gateway-mapping-template-reference.html\n    ##  This template will pass through all parameters including path, querystring, header, stage variables, and context through to the integration endpoint via the body/payload\n    #set($allParams = $input.params())\n    {\n    \"body-json\" : $input.json('$'),\n    \"params\" : {\n    #foreach($type in $allParams.keySet())\n        #set($params = $allParams.get($type))\n    \"$type\" : {\n        #foreach($paramName in $params.keySet())\n        \"$paramName\" : \"$util.escapeJavaScript($params.get($paramName))\"\n            #if($foreach.hasNext),#end\n        #end\n    }\n        #if($foreach.hasNext),#end\n    #end\n    },\n    \"stage-variables\" : {\n    #foreach($key in $stageVariables.keySet())\n    \"$key\" : \"$util.escapeJavaScript($stageVariables.get($key))\"\n        #if($foreach.hasNext),#end\n    #end\n    },\n    \"context\" : {\n        \"account-id\" : \"$context.identity.accountId\",\n        \"api-id\" : \"$context.apiId\",\n        \"api-key\" : \"$context.identity.apiKey\",\n        \"authorizer-principal-id\" : \"$context.authorizer.principalId\",\n        \"caller\" : \"$context.identity.caller\",\n        \"cognito-authentication-provider\" : \"$context.identity.cognitoAuthenticationProvider\",\n        \"cognito-authentication-type\" : \"$context.identity.cognitoAuthenticationType\",\n        \"cognito-identity-id\" : \"$context.identity.cognitoIdentityId\",\n        \"cognito-identity-pool-id\" : \"$context.identity.cognitoIdentityPoolId\",\n        \"http-method\" : \"$context.httpMethod\",\n        \"stage\" : \"$context.stage\",\n        \"source-ip\" : \"$context.identity.sourceIp\",\n        \"user\" : \"$context.identity.user\",\n        \"user-agent\" : \"$context.identity.userAgent\",\n        \"user-arn\" : \"$context.identity.userArn\",\n        \"request-id\" : \"$context.requestId\",\n        \"resource-id\" : \"$context.resourceId\",\n        \"resource-path\" : \"$context.resourcePath\"\n        }\n    }"
          },
          "Type": "AWS",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "lambdaGetLocation8AEF967B",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "ResponseModels": {
              "application/json": "Empty"
            },
            "StatusCode": "200"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/api-centerfield/Default/getLocation/GET/Resource"
      }
    },
    "LambdaInvokeRole0342EAD8": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Description": "Role to invoke lambda"
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/LambdaInvokeRole/Resource"
      }
    },
    "LambdaInvokeRoleDefaultPolicyDE53A8A0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "lambda:InvokeFunction",
                "lambda:GetFunctionConfiguration",
                "logs:*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "lambdaGetLocation8AEF967B",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "LambdaInvokeRoleDefaultPolicyDE53A8A0",
        "Roles": [
          {
            "Ref": "LambdaInvokeRole0342EAD8"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/LambdaInvokeRole/DefaultPolicy/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WRT0/DMAzFPwv3LPwT4rwNwQXE1O0+pYkpXts4qhOmqup3J0kp607++cnPea0f5P2zvLtRZ15pU68aLOWw90rXIkrHgS3L4UAOtdh+2Qn2oWTdofNINqnLfhSmt6olE9ccVNlAtiUYRaPa0ig5vAarZ++Sd9C1yJy3oGrlUNDkz3VHDeo+z2UaBT8eFTN4lutUYi83QdfgN4pBNFTF6O9UvXUUXPL9cwFModNwWXmtjEI5rJSHs+pjCmC/dvg3NuNaawrWixdwDfUtRIzqoos/scrpJ5hfyNnmZvm0+AD/TSZJE43jZS5/YFqEtkoTn8G74K/skbdkDU5XsGRAnvj2J173Kd73xIirLgbGFmQx1V+onp+g+wEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "CdkStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "lambdaarn": {
      "Description": "The url of lambda function arn",
      "Value": {
        "Fn::GetAtt": [
          "lambdaGetLocation8AEF967B",
          "Arn"
        ]
      }
    },
    "apicenterfieldEndpointB5941826": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "apicenterfield7E54AC42"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "apicenterfieldDeploymentStagedev4557BC74"
            },
            "/"
          ]
        ]
      }
    },
    "InvokeRoleArn": {
      "Description": "The arn of invoke role",
      "Value": {
        "Fn::GetAtt": [
          "LambdaInvokeRole0342EAD8",
          "Arn"
        ]
      }
    },
    "apiUrl": {
      "Description": "The url of API Gateway",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "apicenterfield7E54AC42"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "apicenterfieldDeploymentStagedev4557BC74"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}